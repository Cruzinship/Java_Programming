package Real;

public class ExceptionsCheckAndUnchecked {
    //checked: compile time
    //unchecked: runtime

    //Exception handling:
    public static void main(String[] args) {
        int[] arr = new int[4];
        //throws: for checked exceptions, fastest solution(These are already made)
        //throw: raises/Creates the exception manually
        //throw/throws can be used in try{} or whenever you wish to throw a random exception maybe in an if statement
        try { //The try keyword creates a try...catch statement.
            int i = arr[4];  //The try statement allows you to define a block of code to be tested for errors while it is being executed.
            System.out.println("Inside try block");
        } catch (ArrayIndexOutOfBoundsException e) { //catches exceptions generated by try statements
            //throwable is able to be-used but, it is only for exceptions and not errors
            System.out.println("Exception caught in catch block");
            //printStackTrace
            //NullPointer
            //NoSuchElement
            //ClassCast
            //TimeOutException
            //WebDriverException
            //StateElement
        } finally { //Finally is used to create a block of code that follows a try block. This piece of code will always execute
            System.out.println("finally block executed");
        }
        System.out.println("Outside");


    }
}